#set target = ML7AS

const DEBUG = false

if DEBUG === true
	start = @time
end
if DEBUG === true
	// debug memory cell, change N to one that linked by processor
	D_MC = cellN
	D_MSG = messageN
	allocate heap in D_MC[60...63]
end

if !switch1.enabled
	end()
end

UNIT_TYPE = @poly

// ***************** Logic Start ********************** //

do 
	ubind(UNIT_TYPE)
	// judge @unit
	if player === null || player.dead || player.controlled !== 2
		player = uradar(player, any, any, distance, true)
	else
		approach(player.x, player.y, 6)
		targetp(player, false)
	end
loop while player !== null && !player.dead && player.controlled === 2

// *****************  Logic End  ********************** //

if DEBUG == true
	end_ = @time
	$runCount += 1
	$totalTime += ceil(end_ - start)
	if $totalTime > 0xFFF
		avgTime = ceil($totalTime / $runCount)
		$runCount = 0
		$totalTime = 0
	end
	printf("\n[gray]LOG: Cost time: ${}ms\n", ceil(end_ - start))
	printf("\n[gray]LOG: Avg Cost time: ${}ms\n", avgTime)
	printflush(D_MSG)
end
